services:
  db:
    image: postgres:16-alpine
    container_name: recotg_db
    restart: unless-stopped
    env_file: .env
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - recotg_pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - recotg_net
    
  pgadmin:
    image: dpage/pgadmin4
    container_name: recotg_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    networks:
      - recotg_net

  recotg_auth:
    build:
      context: .
      dockerfile: ./src/services/auth/Dockerfile
    container_name: recotg_auth
    restart: unless-stopped
    depends_on:
      - db
    env_file: .env
    environment:
      # эти переменные будут видны внутри контейнера auth
      POSTGRES_DB: ${POSTGRES_DB}
      JWT_ACCESS_SECRET: ${JWT_ACCESS_SECRET}
    command: >
      uvicorn src.services.auth.app.main:app
      --host 0.0.0.0
      --port 8000
    ports:
      - "8001:8000"
    networks:
      - recotg_net

  bot:
    build:
      context: .
      dockerfile: ./src/services/bot/Dockerfile
    container_name: recotg_bot
    restart: unless-stopped
    depends_on:
      - recotg_auth
    env_file: .env
    environment:
      BOT_TOKEN: ${BOT_TOKEN}
      AUTH_SERVICE_URL: ${AUTH_SERVICE_URL}
    command: >
      python -m src.services.bot.app.main
    networks:
      - recotg_net

volumes:
  recotg_db_data:
  recotg_pgdata:

networks:
  recotg_net:
    driver: bridge
