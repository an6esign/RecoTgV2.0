from aiogram import Router, types
from aiogram.filters import Command
import httpx

from ..config import settings

router = Router(name="me")


@router.message(Command("me"))
async def handle_me(message: types.Message):
    tg_id = message.from_user.id

    async with httpx.AsyncClient(timeout=5.0) as client:
        resp = await client.get(f"{settings.AUTH_SERVICE_URL}/users/{tg_id}")

    if resp.status_code == 200:
        data = resp.json()
        await message.answer(
            "–¢–≤–æ–∏ –¥–∞–Ω–Ω—ã–µ –≤ —Å–∏—Å—Ç–µ–º–µ:\n"
            f"ID –≤ –±–∞–∑–µ: {data.get('id')}\n"
            f"telegram_user_id: {data.get('telegram_user_id')}\n"
            f"username: @{data.get('username')}\n"
            f"phone: {data.get('phone')}\n"
            f"is_active: {data.get('is_active')}"
        )
    elif resp.status_code == 404:
        # –≤–æ—Ç —Ç—É—Ç —Ç—ã —Ä–∞–Ω—å—à–µ –≤–∏–¥–µ–ª "–Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
        await message.answer(
            "–¢—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω üò∂\n"
            "–ù–∞–∂–º–∏ /contact –∏ –æ—Ç–ø—Ä–∞–≤—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞, —á—Ç–æ–±—ã —Å–æ–∑–¥–∞—Ç—å –∞–∫–∫–∞—É–Ω—Ç."
        )
    else:
        await message.answer(
            "–°–µ—Ä–≤–∏—Å –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ —Å–µ–π—á–∞—Å –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç üòî.\n"
            "–ü–æ–ø—Ä–æ–±—É–π —á—É—Ç—å –ø–æ–∑–∂–µ."
        )
